// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StudyShare.Infrastructure.Database;

#nullable disable

namespace StudyShare.Infrastructure.Migrations
{
    [DbContext(typeof(StudyShareDbContext))]
    partial class StudyShareDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("StudyShare.Domain.Entities.ClassLevel", b =>
                {
                    b.Property<int>("ClassLevelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ClassLevelId"));

                    b.Property<string>("ClassLevelName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.HasKey("ClassLevelId");

                    b.ToTable("ClassLevels");

                    b.HasData(
                        new
                        {
                            ClassLevelId = 1,
                            ClassLevelName = "CP"
                        },
                        new
                        {
                            ClassLevelId = 2,
                            ClassLevelName = "CE1"
                        },
                        new
                        {
                            ClassLevelId = 3,
                            ClassLevelName = "CE2"
                        },
                        new
                        {
                            ClassLevelId = 4,
                            ClassLevelName = "CM1"
                        },
                        new
                        {
                            ClassLevelId = 5,
                            ClassLevelName = "CM2"
                        },
                        new
                        {
                            ClassLevelId = 6,
                            ClassLevelName = "6ème"
                        },
                        new
                        {
                            ClassLevelId = 7,
                            ClassLevelName = "5ème"
                        },
                        new
                        {
                            ClassLevelId = 8,
                            ClassLevelName = "4ème"
                        },
                        new
                        {
                            ClassLevelId = 9,
                            ClassLevelName = "3ème"
                        },
                        new
                        {
                            ClassLevelId = 10,
                            ClassLevelName = "2nde"
                        },
                        new
                        {
                            ClassLevelId = 11,
                            ClassLevelName = "1ère"
                        },
                        new
                        {
                            ClassLevelId = 12,
                            ClassLevelName = "Terminale"
                        });
                });

            modelBuilder.Entity("StudyShare.Domain.Entities.Keyword", b =>
                {
                    b.Property<int>("KeywordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("KeywordId"));

                    b.Property<string>("KeywordName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("KeywordId");

                    b.ToTable("Keywords");

                    b.HasData(
                        new
                        {
                            KeywordId = 1,
                            KeywordName = "Lecture"
                        },
                        new
                        {
                            KeywordId = 2,
                            KeywordName = "Écriture"
                        },
                        new
                        {
                            KeywordId = 3,
                            KeywordName = "Grammaire"
                        },
                        new
                        {
                            KeywordId = 4,
                            KeywordName = "Conjugaison"
                        },
                        new
                        {
                            KeywordId = 5,
                            KeywordName = "Orthographe"
                        },
                        new
                        {
                            KeywordId = 6,
                            KeywordName = "Vocabulaire"
                        },
                        new
                        {
                            KeywordId = 7,
                            KeywordName = "Récit"
                        },
                        new
                        {
                            KeywordId = 8,
                            KeywordName = "Poésie"
                        },
                        new
                        {
                            KeywordId = 9,
                            KeywordName = "Résumé"
                        },
                        new
                        {
                            KeywordId = 10,
                            KeywordName = "Dissertation"
                        },
                        new
                        {
                            KeywordId = 11,
                            KeywordName = "Calcul"
                        },
                        new
                        {
                            KeywordId = 12,
                            KeywordName = "Numération"
                        },
                        new
                        {
                            KeywordId = 13,
                            KeywordName = "Géométrie"
                        },
                        new
                        {
                            KeywordId = 14,
                            KeywordName = "Algèbre"
                        },
                        new
                        {
                            KeywordId = 15,
                            KeywordName = "Proportionnalité"
                        },
                        new
                        {
                            KeywordId = 16,
                            KeywordName = "Statistiques"
                        },
                        new
                        {
                            KeywordId = 17,
                            KeywordName = "Probabilités"
                        },
                        new
                        {
                            KeywordId = 18,
                            KeywordName = "Équations"
                        },
                        new
                        {
                            KeywordId = 19,
                            KeywordName = "Inéquations"
                        },
                        new
                        {
                            KeywordId = 20,
                            KeywordName = "Fonctions"
                        },
                        new
                        {
                            KeywordId = 21,
                            KeywordName = "Préhistoire"
                        },
                        new
                        {
                            KeywordId = 22,
                            KeywordName = "Antiquité"
                        },
                        new
                        {
                            KeywordId = 23,
                            KeywordName = "Moyen Âge"
                        },
                        new
                        {
                            KeywordId = 24,
                            KeywordName = "Renaissance"
                        },
                        new
                        {
                            KeywordId = 25,
                            KeywordName = "Révolutions"
                        },
                        new
                        {
                            KeywordId = 26,
                            KeywordName = "Guerres mondiales"
                        },
                        new
                        {
                            KeywordId = 27,
                            KeywordName = "Décolonisation"
                        },
                        new
                        {
                            KeywordId = 28,
                            KeywordName = "Histoire de France"
                        },
                        new
                        {
                            KeywordId = 29,
                            KeywordName = "Histoire du monde"
                        },
                        new
                        {
                            KeywordId = 30,
                            KeywordName = "Civilisations"
                        },
                        new
                        {
                            KeywordId = 31,
                            KeywordName = "Cartographie"
                        },
                        new
                        {
                            KeywordId = 32,
                            KeywordName = "Relief"
                        },
                        new
                        {
                            KeywordId = 33,
                            KeywordName = "Climat"
                        },
                        new
                        {
                            KeywordId = 34,
                            KeywordName = "Environnement"
                        },
                        new
                        {
                            KeywordId = 35,
                            KeywordName = "Population"
                        },
                        new
                        {
                            KeywordId = 36,
                            KeywordName = "Développement durable"
                        },
                        new
                        {
                            KeywordId = 37,
                            KeywordName = "Mondialisation"
                        },
                        new
                        {
                            KeywordId = 38,
                            KeywordName = "Géopolitique"
                        },
                        new
                        {
                            KeywordId = 39,
                            KeywordName = "Ressources naturelles"
                        },
                        new
                        {
                            KeywordId = 40,
                            KeywordName = "Aménagement du territoire"
                        },
                        new
                        {
                            KeywordId = 41,
                            KeywordName = "Vocabulaire"
                        },
                        new
                        {
                            KeywordId = 42,
                            KeywordName = "Grammaire"
                        },
                        new
                        {
                            KeywordId = 43,
                            KeywordName = "Conjugaison"
                        },
                        new
                        {
                            KeywordId = 44,
                            KeywordName = "Compréhension écrite"
                        },
                        new
                        {
                            KeywordId = 45,
                            KeywordName = "Compréhension orale"
                        },
                        new
                        {
                            KeywordId = 46,
                            KeywordName = "Expression écrite"
                        },
                        new
                        {
                            KeywordId = 47,
                            KeywordName = "Expression orale"
                        },
                        new
                        {
                            KeywordId = 48,
                            KeywordName = "Traduction"
                        },
                        new
                        {
                            KeywordId = 49,
                            KeywordName = "Civilisation anglophone"
                        },
                        new
                        {
                            KeywordId = 50,
                            KeywordName = "Langue des affaires"
                        });
                });

            modelBuilder.Entity("StudyShare.Domain.Entities.Paper", b =>
                {
                    b.Property<int>("PaperId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("PaperId"));

                    b.Property<string>("PaperDescription")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<int>("PaperDownloadsNumber")
                        .HasColumnType("int");

                    b.Property<string>("PaperName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("PaperPath")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<DateTime>("PaperUploadDate")
                        .HasMaxLength(100)
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("PaperVisibility")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true);

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("PaperId");

                    b.HasIndex("UserId");

                    b.ToTable("Papers");
                });

            modelBuilder.Entity("StudyShare.Domain.Entities.PaperClassLevel", b =>
                {
                    b.Property<int>("PaperId")
                        .HasColumnType("int");

                    b.Property<int>("ClassLevelId")
                        .HasColumnType("int");

                    b.HasKey("PaperId", "ClassLevelId");

                    b.HasIndex("ClassLevelId");

                    b.ToTable("PaperClassLevels");
                });

            modelBuilder.Entity("StudyShare.Domain.Entities.PaperKeyword", b =>
                {
                    b.Property<int>("PaperId")
                        .HasColumnType("int");

                    b.Property<int>("KeywordId")
                        .HasColumnType("int");

                    b.HasKey("PaperId", "KeywordId");

                    b.HasIndex("KeywordId");

                    b.ToTable("PaperKeywords");
                });

            modelBuilder.Entity("StudyShare.Domain.Entities.School", b =>
                {
                    b.Property<int>("SchoolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("SchoolId"));

                    b.Property<string>("SchoolName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("SchoolId");

                    b.ToTable("Schools");
                });

            modelBuilder.Entity("StudyShare.Domain.Entities.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("UserFirstname")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("UserLastname")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("UserPassword")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("UserRoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.ToTable("tbl_user");
                });

            modelBuilder.Entity("StudyShare.Domain.Entities.UserClassLevel", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("ClassLevelId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "ClassLevelId");

                    b.HasIndex("ClassLevelId");

                    b.ToTable("UserClassLevels");
                });

            modelBuilder.Entity("StudyShare.Domain.Entities.UserSchool", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("SchoolId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "SchoolId");

                    b.HasIndex("SchoolId");

                    b.ToTable("UserSchools");
                });

            modelBuilder.Entity("StudyShare.Domain.Entities.UserWorkGroup", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("WorkGroupId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "WorkGroupId");

                    b.HasIndex("WorkGroupId");

                    b.ToTable("UserWorkGroups");
                });

            modelBuilder.Entity("StudyShare.Domain.Entities.WorkGroup", b =>
                {
                    b.Property<int>("WorkGroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("WorkGroupId"));

                    b.Property<string>("WorkGroupName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("WorkGroupId");

                    b.ToTable("WorkGroups");
                });

            modelBuilder.Entity("StudyShare.Domain.Entities.Paper", b =>
                {
                    b.HasOne("StudyShare.Domain.Entities.User", "User")
                        .WithMany("Paper")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("StudyShare.Domain.Entities.PaperClassLevel", b =>
                {
                    b.HasOne("StudyShare.Domain.Entities.ClassLevel", "ClassLevel")
                        .WithMany("PaperClassLevel")
                        .HasForeignKey("ClassLevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudyShare.Domain.Entities.Paper", "Paper")
                        .WithMany("PaperClassLevel")
                        .HasForeignKey("PaperId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClassLevel");

                    b.Navigation("Paper");
                });

            modelBuilder.Entity("StudyShare.Domain.Entities.PaperKeyword", b =>
                {
                    b.HasOne("StudyShare.Domain.Entities.Keyword", "Keyword")
                        .WithMany("PaperKeyword")
                        .HasForeignKey("KeywordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudyShare.Domain.Entities.Paper", "Paper")
                        .WithMany("PaperKeyword")
                        .HasForeignKey("PaperId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Keyword");

                    b.Navigation("Paper");
                });

            modelBuilder.Entity("StudyShare.Domain.Entities.UserClassLevel", b =>
                {
                    b.HasOne("StudyShare.Domain.Entities.ClassLevel", "ClassLevel")
                        .WithMany("UserClassLevel")
                        .HasForeignKey("ClassLevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudyShare.Domain.Entities.User", "User")
                        .WithMany("UserClassLevel")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClassLevel");

                    b.Navigation("User");
                });

            modelBuilder.Entity("StudyShare.Domain.Entities.UserSchool", b =>
                {
                    b.HasOne("StudyShare.Domain.Entities.School", "School")
                        .WithMany("UserSchool")
                        .HasForeignKey("SchoolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudyShare.Domain.Entities.User", "User")
                        .WithMany("UserSchool")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("School");

                    b.Navigation("User");
                });

            modelBuilder.Entity("StudyShare.Domain.Entities.UserWorkGroup", b =>
                {
                    b.HasOne("StudyShare.Domain.Entities.User", "User")
                        .WithMany("UserWorkGroup")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudyShare.Domain.Entities.WorkGroup", "WorkGroup")
                        .WithMany("UserWorkGroup")
                        .HasForeignKey("WorkGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("WorkGroup");
                });

            modelBuilder.Entity("StudyShare.Domain.Entities.ClassLevel", b =>
                {
                    b.Navigation("PaperClassLevel");

                    b.Navigation("UserClassLevel");
                });

            modelBuilder.Entity("StudyShare.Domain.Entities.Keyword", b =>
                {
                    b.Navigation("PaperKeyword");
                });

            modelBuilder.Entity("StudyShare.Domain.Entities.Paper", b =>
                {
                    b.Navigation("PaperClassLevel");

                    b.Navigation("PaperKeyword");
                });

            modelBuilder.Entity("StudyShare.Domain.Entities.School", b =>
                {
                    b.Navigation("UserSchool");
                });

            modelBuilder.Entity("StudyShare.Domain.Entities.User", b =>
                {
                    b.Navigation("Paper");

                    b.Navigation("UserClassLevel");

                    b.Navigation("UserSchool");

                    b.Navigation("UserWorkGroup");
                });

            modelBuilder.Entity("StudyShare.Domain.Entities.WorkGroup", b =>
                {
                    b.Navigation("UserWorkGroup");
                });
#pragma warning restore 612, 618
        }
    }
}
